Starting audit...
[ERROR] /home/sebastian/etapa2/./src/io/Constants.java:3:8: Unused import - com.sun.source.tree.BreakTree. [UnusedImports]
[ERROR] /home/sebastian/etapa2/./src/io/Constants.java:4:8: Unused import - strategies.EnergyChoiceStrategyType. [UnusedImports]
[ERROR] /home/sebastian/etapa2/./src/io/Constants.java:20:5: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/sebastian/etapa2/./src/io/Constants.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/io/Constants.java:22:55: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/io/Constants.java:41:42: '->' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:28:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:31: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:32: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:38: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:40: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:41: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:42: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:43: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:44: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:52: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:54: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:60:52: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:61:27: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:64: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/EntityFactory.java:68: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:6:8: Unused import - entities.Entity. [UnusedImports]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:16:8: Unused import - java.util.Observer. [UnusedImports]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:40: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:42: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:56:44: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:57:18: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:57:45: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:58: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:59: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:60: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:63: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:63:93: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:63:96: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:67:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:68: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:72:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Input.java:73: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:13:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:32: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:34:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:36:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:36:75: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:41:65: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:89:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:91: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:91:118: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:102:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:123: Line is longer than 100 characters (found 205). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:123:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:124:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:124:53: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:130:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:133:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:135:25: '(' should be on the previous line. [MethodParamPad]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:147:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/io/Writer.java:153: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/contract/ContractConsumerDistributor.java:51:34: 'price' hides a field. [HiddenField]
[ERROR] /home/sebastian/etapa2/./src/contract/Contract.java:7:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getReceiverId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getReceiverId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/contract/Contract.java:11:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getProviderId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getProviderId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/contract/ContractDistributorProducer.java:3:58: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/contract/ContractDistributorProducer.java:5:5: Class 'ContractDistributorProducer' looks like designed for extension (can be subclassed), but the method 'getDistributorId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractDistributorProducer' final or making the method 'getDistributorId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/contract/ContractDistributorProducer.java:8:5: Class 'ContractDistributorProducer' looks like designed for extension (can be subclassed), but the method 'getProducerId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractDistributorProducer' final or making the method 'getProducerId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:10:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:14:12: Variable 'mapper' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:15:15: Variable 'instancer' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:20:5: Class 'Contractor' looks like designed for extension (can be subclassed), but the method 'setNrConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contractor' final or making the method 'setNrConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:24:5: Class 'Contractor' looks like designed for extension (can be subclassed), but the method 'nullifyContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contractor' final or making the method 'nullifyContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:25: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:28:5: Class 'Contractor' looks like designed for extension (can be subclassed), but the method 'setContractsConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contractor' final or making the method 'setContractsConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:38: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:47: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:61:5: Class 'Contractor' looks like designed for extension (can be subclassed), but the method 'setContractsProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contractor' final or making the method 'setContractsProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:63:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:64:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:65:17: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/contract/Contractor.java:78:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/Main.java:32:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/PriceStrategy.java:7:47: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/PriceStrategy.java:8:5: Class 'PriceStrategy' looks like designed for extension (can be subclassed), but the method 'getSortedList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PriceStrategy' final or making the method 'getSortedList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/strategies/PriceStrategy.java:11:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/sebastian/etapa2/./src/strategies/PriceStrategy.java:11:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/PriceStrategy.java:13:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/sebastian/etapa2/./src/strategies/PriceStrategy.java:13:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/Strategy.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:11:25: Variable 'label' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:15:29: '{' at column 29 should have line break after. [LeftCurly]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:15:29: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:15:30: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:15:67: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:15:68: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:16:29: '{' at column 29 should have line break after. [LeftCurly]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:16:29: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:16:30: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:16:67: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:16:68: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:17:32: '{' at column 32 should have line break after. [LeftCurly]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:17:32: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:17:33: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:17:73: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:17:74: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:18:24: '{' at column 24 should have line break after. [LeftCurly]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:18:24: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:18:25: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:18:36: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:18:37: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/EnergyChoiceStrategyType.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:7:47: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:8:5: Class 'GreenStrategy' looks like designed for extension (can be subclassed), but the method 'getSortedList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GreenStrategy' final or making the method 'getSortedList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:11:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:11:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:13:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:13:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:15:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:15:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:17:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/sebastian/etapa2/./src/strategies/GreenStrategy.java:17:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/QuantityStrategy.java:7:50: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/strategies/QuantityStrategy.java:8:5: Class 'QuantityStrategy' looks like designed for extension (can be subclassed), but the method 'getSortedList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QuantityStrategy' final or making the method 'getSortedList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/strategies/QuantityStrategy.java:11:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/sebastian/etapa2/./src/strategies/QuantityStrategy.java:11:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/strategies/QuantityStrategy.java:13:13: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /home/sebastian/etapa2/./src/strategies/StrategyFactory.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/sebastian/etapa2/./src/strategies/StrategyFactory.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/strategies/StrategyFactory.java:4:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:7:18: Using the '.*' form of import should be avoided - strategies.*. [AvoidStarImport]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:9:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:19:30: Variable 'strategyType' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:20:14: Variable 'strategy' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:24: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:25: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:27:13: Variable 'searchProducer' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:29: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:29:73: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:29:73: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:41:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getStrategyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getStrategyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:45:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getEnergyNeededKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getEnergyNeededKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:49:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:53:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'isSaturated' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'isSaturated' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:57:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getSearchProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getSearchProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:61:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setSearchProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setSearchProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:62:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:62:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:67:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'updateEnergyReceived' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'updateEnergyReceived' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:71: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:71:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setActiveContractDistributorProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setActiveContractDistributorProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:83:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'modify' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'modify' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:172:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:174:31: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:175:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:176:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:177:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:178:62: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:179:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:180:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:181:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:182:56: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:183:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:184:75: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:185:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:242: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:242:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getActiveProducersContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getActiveProducersContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:242:76: '{' at column 76 should have line break after. [LeftCurly]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:242:76: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:242:77: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:253:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'update' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'update' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:258:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'sortedList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'sortedList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:258:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entities/Distributor.java:258:58: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entities/Consumer.java:72: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/entities/Consumer.java:72:69: 'activeContractConsumerDistributor' hides a field. [HiddenField]
[ERROR] /home/sebastian/etapa2/./src/entities/Consumer.java:100: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/sebastian/etapa2/./src/entities/Consumer.java:101:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'modify' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'modify' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Consumer.java:101:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entities/Consumer.java:101:59: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entities/Entity.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:12:10: Variable 'id' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:12:14: Variable 'energyPerDistributor' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:12:36: Variable 'maxDistributors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:13:15: Variable 'energyType' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:14:12: Variable 'priceKW' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:15:20: Variable 'observers' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:16:39: Variable 'contractList' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:18: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:26:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'acceptsClients' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'acceptsClients' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:30:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setContractList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setContractList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:34:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:38:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getContractList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getContractList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:42:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:46:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:50:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:54:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'addContract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'addContract' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:61:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:66:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:68:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:69:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:70:66: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:71:56: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:72:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:73:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:77:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'isInGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'isInGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:82:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:87:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:92:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'modify' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'modify' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:97:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'addObserver' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'addObserver' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:102:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'notifyObservers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'notifyObservers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entities/Producer.java:104:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:17:11: Variable 'input' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:18:15: Variable 'instancer' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:19:16: Variable 'contractor' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:20:12: Variable 'pricer' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:21:20: Variable 'mod' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:33:5: Class 'Simulation' looks like designed for extension (can be subclassed), but the method 'initialRun' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Simulation' final or making the method 'initialRun' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:43:5: Class 'Simulation' looks like designed for extension (can be subclassed), but the method 'normalRun' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Simulation' final or making the method 'normalRun' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:59:5: Class 'Simulation' looks like designed for extension (can be subclassed), but the method 'simulate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Simulation' final or making the method 'simulate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:59:59: 'input' hides a field. [HiddenField]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:61:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:65:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:68:55: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/simulator/Simulation.java:68:55: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:4:10: Variable 'id' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:5:10: Variable 'dimension' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:12:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:15:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'getDimension' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'getDimension' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:15:31: '{' at column 31 should have line break after. [LeftCurly]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:15:31: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:15:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:15:32: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:15:48: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Change.java:15:49: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entityatt/EntityModifier.java:14:12: Variable 'pricer' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entityatt/EntityModifier.java:15:15: Variable 'instancer' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entityatt/EntityModifier.java:16:10: Variable 'monthIndex' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entityatt/EntityModifier.java:23:5: Class 'EntityModifier' looks like designed for extension (can be subclassed), but the method 'setMonthIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EntityModifier' final or making the method 'setMonthIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/EntityModifier.java:27:5: Class 'EntityModifier' looks like designed for extension (can be subclassed), but the method 'modifyEntities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EntityModifier' final or making the method 'modifyEntities' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/EntityModifier.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/EntityModifier.java:41:5: Class 'EntityModifier' looks like designed for extension (can be subclassed), but the method 'modifyProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EntityModifier' final or making the method 'modifyProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/EntityModifier.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Mapper.java:4:8: Unused import - entities.Entity. [UnusedImports]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Mapper.java:13:5: Class 'Mapper' looks like designed for extension (can be subclassed), but the method 'getMap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Mapper' final or making the method 'getMap' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Mapper.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/ProducerChange.java:3:43: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entityatt/ProducerChange.java:8:5: Class 'ProducerChange' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerChange' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:16:15: Variable 'instancer' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:22:5: Class 'Pricer' looks like designed for extension (can be subclassed), but the method 'normalPricing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pricer' final or making the method 'normalPricing' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:30:5: Class 'Pricer' looks like designed for extension (can be subclassed), but the method 'restantPricing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pricer' final or making the method 'restantPricing' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:47:5: Class 'Pricer' looks like designed for extension (can be subclassed), but the method 'returnMoney' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pricer' final or making the method 'returnMoney' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:66:5: Class 'Pricer' looks like designed for extension (can be subclassed), but the method 'setMonthlyExpenses' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pricer' final or making the method 'setMonthlyExpenses' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:73:5: Class 'Pricer' looks like designed for extension (can be subclassed), but the method 'setPrices' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pricer' final or making the method 'setPrices' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:93:5: Class 'Pricer' looks like designed for extension (can be subclassed), but the method 'setProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pricer' final or making the method 'setProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:93:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:97:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:101:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Pricer.java:106:58: '10' is a magic number. [MagicNumber]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:5:8: Unused import - entities.Entity. [UnusedImports]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:12:11: Variable 'input' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:18:5: Class 'Instancer' looks like designed for extension (can be subclassed), but the method 'getInput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Instancer' final or making the method 'getInput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:22:5: Class 'Instancer' looks like designed for extension (can be subclassed), but the method 'addNewEntities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Instancer' final or making the method 'addNewEntities' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:22:32: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:26: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:36:5: Class 'Instancer' looks like designed for extension (can be subclassed), but the method 'getConsumer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Instancer' final or making the method 'getConsumer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:45:5: Class 'Instancer' looks like designed for extension (can be subclassed), but the method 'getDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Instancer' final or making the method 'getDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:55:5: Class 'Instancer' looks like designed for extension (can be subclassed), but the method 'getProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Instancer' final or making the method 'getProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/sebastian/etapa2/./src/entityatt/Instancer.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/sebastian/etapa2/./src/entityatt/DistributorChange.java:3:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/sebastian/etapa2/./src/entityatt/DistributorChange.java:9:5: Class 'DistributorChange' looks like designed for extension (can be subclassed), but the method 'getInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorChange' final or making the method 'getInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 289 errors.
